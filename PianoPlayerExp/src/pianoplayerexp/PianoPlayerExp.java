/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pianoplayerexp;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JSlider;


/*
 * By Callum Johnston
 */
/**
 *
 * @author cijohnston
 */
public class PianoPlayerExp extends javax.swing.JFrame {

    private NoteReader notes;
    private NotePlayer play;

    /**
     * Creates new form MainMenu
     */
    public PianoPlayerExp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        pianoKeys = new Piano();
        mySheet = new SheetMusic();
        songComboBox = new JComboBox();
        volumeSlider = new JSlider();
        tempoSlider = new JSlider();
        playButton = new JButton();
        stopButton = new JButton();
        resetButton = new JButton();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        previousPageButton = new JButton();
        nextPageButton = new JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                formComponentMoved(evt);
            }
        });

        javax.swing.GroupLayout pianoKeysLayout = new javax.swing.GroupLayout(pianoKeys);
        pianoKeys.setLayout(pianoKeysLayout);
        pianoKeysLayout.setHorizontalGroup(
            pianoKeysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        pianoKeysLayout.setVerticalGroup(
            pianoKeysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 582, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout mySheetLayout = new javax.swing.GroupLayout(mySheet);
        mySheet.setLayout(mySheetLayout);
        mySheetLayout.setHorizontalGroup(
            mySheetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 531, Short.MAX_VALUE)
        );
        mySheetLayout.setVerticalGroup(
            mySheetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
        );

        songComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fur Elise", "Pirates Of The Caribbean Theme", "iPohne Ringtone", "Mary Had A Little Lamb" }));
        songComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                songComboBoxActionPerformed(evt);
            }
        });

        playButton.setText("Play");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Piano Player");

        jLabel2.setText("Volume");

        jLabel3.setText("Tempo");

        previousPageButton.setText("Previous Page");
        previousPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousPageButtonActionPerformed(evt);
            }
        });

        nextPageButton.setText("Next Page");
        nextPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextPageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pianoKeys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(mySheet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(songComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(playButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(stopButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(resetButton)))
                                .addGap(303, 303, 303)
                                .addComponent(previousPageButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nextPageButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(volumeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tempoSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(previousPageButton)
                            .addComponent(nextPageButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(songComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playButton)
                            .addComponent(stopButton)
                            .addComponent(resetButton))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(volumeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(3, 3, 3)
                        .addComponent(tempoSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mySheet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pianoKeys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        if (songComboBox.getSelectedIndex()==0) {
            notes = new NoteReader(0);
        } else if (songComboBox.getSelectedIndex()==1) {
            notes = new NoteReader(1);
        } else if (songComboBox.getSelectedIndex()==2) {
            notes = new NoteReader(2);
        } else {
            notes = new NoteReader(3);
        }
        play = new NotePlayer(notes, pianoKeys, mySheet);
        tempoSlider.setExtent(notes.getDefaultTempo()*2);
        tempoSlider.setValue(notes.getDefaultTempo());
        play.setDuration(notes.getDefaultTempo());
        play.setVolume((int) (1.27 * volumeSlider.getValue()));
        Thread threadder = new Thread(play);
        threadder.start();
        play.setDuration(2 - tempoSlider.getValue() / 50);
        play.setVolume((int) (1.27 * volumeSlider.getValue()));

    }                                          

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        play.setCancel(true);
    }                                          

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        volumeSlider.setValue(50);
        tempoSlider.setValue(50);
    }                                           

    private void formComponentMoved(java.awt.event.ComponentEvent evt) {                                    
        
        if (songComboBox.getSelectedIndex()==0) {
            mySheet.setSong(0);
            mySheet.setPage(0);
            mySheet.repaint();
        } else if (songComboBox.getSelectedIndex()==1) {
            mySheet.setSong(1);
            mySheet.setPage(0);
            mySheet.repaint();
        } else if (songComboBox.getSelectedIndex()==2) {
            mySheet.setSong(2);
            mySheet.setPage(0);
            mySheet.repaint();
        } else {
            mySheet.setSong(3);
            mySheet.setPage(0);
            mySheet.repaint();
        }
    }                                   

    private void previousPageButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        if (mySheet.getPage() > 0) {
            mySheet.setPage(mySheet.getPage() - 1);
        }
        mySheet.repaint();
    }                                                  

    private void nextPageButtonActionPerformed(java.awt.event.ActionEvent evt) {                                               
        mySheet.setPage(mySheet.getPage() + 1);
        mySheet.repaint();
    }                                              

    private void songComboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                             
        if (songComboBox.getSelectedIndex()==0) {
            mySheet.setSong(0);
            mySheet.setPage(0);
            mySheet.repaint();
        } else if (songComboBox.getSelectedIndex()==1) {
            mySheet.setSong(1);
            mySheet.setPage(0);
            mySheet.repaint();
        } else if (songComboBox.getSelectedIndex()==2) {
            mySheet.setSong(2);
            mySheet.setPage(0);
            mySheet.repaint();
        } else {
            mySheet.setSong(3);
            mySheet.setPage(0);
            mySheet.repaint();
        }
    }                                            

  
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PianoPlayerExp().setVisible(true);
            }
        });
    }
                   
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private SheetMusic mySheet;
    private JButton nextPageButton;
    private Piano pianoKeys;
    private JButton playButton;
    private JButton previousPageButton;
    private JButton resetButton;
    private JComboBox songComboBox;
    private JButton stopButton;
    private JSlider tempoSlider;
    private JSlider volumeSlider;             
}
